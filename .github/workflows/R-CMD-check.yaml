---
# Github Actions workflow to check CmdStanR
# yamllint disable rule:line-length

name: Unit tests

'on':
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  R-CMD-check:
    if: "! contains(github.event.head_commit.message, '[ci skip]')"
    runs-on: ${{ matrix.config.os }}

    name: ${{ matrix.config.os }} (${{ matrix.config.r }})

    strategy:
      fail-fast: false
      matrix:
        config:
          - {os: macOS-latest, r: 'devel', rtools: '', opencl: true}
          - {os: macOS-latest, r: 'release', rtools: '', opencl: true}
          - {os: windows-latest, r: 'devel', rtools: '44'}
          - {os: windows-latest, r: 'release', rtools: '44'}
          - {os: windows-latest, r: 'oldrel', rtools: '43'}
          - {os: ubuntu-latest, r: 'devel', rtools: '', opencl: true}
          - {os: ubuntu-latest, r: 'release', rtools: '', opencl: true}
          - {os: ubuntu-latest, r: 'oldrel', rtools: '', opencl: true}
    env:
      R_REMOTES_NO_ERRORS_FROM_WARNINGS: true
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}
      NOT_CRAN: true
      CMDSTANR_OPENCL_TESTS: ${{ matrix.config.opencl }}

    steps:
      - name: cmdstan env vars
        run: |
          echo "CMDSTAN_PATH=${HOME}/.cmdstan" >> $GITHUB_ENV
        shell: bash

      - uses: n1hility/cancel-previous-runs@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
        if: "!startsWith(github.ref, 'refs/tags/') && github.ref != 'refs/heads/master'"

      - uses: actions/checkout@v4

      - uses: r-lib/actions/setup-r@v2.11.2
        with:
          r-version: ${{ matrix.config.r }}
          rtools-version: ${{ matrix.config.rtools }}

      - uses: r-lib/actions/setup-pandoc@v2.11.2

      - uses: r-lib/actions/setup-r-dependencies@v2.11.2
        with:
          cache: "always"
          extra-packages: any::rcmdcheck, local::.

      - name: Install POCL on Ubuntu Runners
        if: ${{ matrix.config.os == 'ubuntu-latest' }}
        run: |
          sudo apt-get update && sudo apt-get install -y ocl-icd-opencl-dev pocl-opencl-icd
        shell: bash

      - name: Install POCL on MacOS Runners
        if: ${{ matrix.config.os == 'macOS-latest' }}
        run: |
          brew install pocl
          # Set LDLIBS_OPENCL environment variable so that CPU OpenCL is found
          # instead of Apple's GPU OpenCL - which does not support double precision
          echo "LDLIBS_OPENCL=-L'/opt/homebrew/opt/opencl-icd-loader/lib' -lOpenCL" >> $GITHUB_ENV
        shell: bash

      - name: Install cmdstan
        run: |
          cmdstanr::check_cmdstan_toolchain(fix = TRUE)
          cmdstanr::install_cmdstan(cores = 2)
        shell: Rscript {0}

      - name: Session info
        run: |
          options(width = 100)
          pkgs <- installed.packages()[, "Package"]
          sessioninfo::session_info(pkgs, include_base = TRUE)
        shell: Rscript {0}

      - uses: r-lib/actions/check-r-package@v2.11.2
        env:
          _R_CHECK_CRAN_INCOMING_: false

      - name: Show testthat output
        if: always()
        run: find check -name 'testthat.Rout*' -exec cat '{}' \; || true
        shell: bash

      - name: Upload check results
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: ${{ runner.os }}-r${{ matrix.config.r }}-results
          path: check

---
# Github Actions workflow to check CmdStanR
# yamllint disable rule:line-length

name: Unit tests - WSL Backend

'on':
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  WSL-R-CMD-check:
    if: "! contains(github.event.head_commit.message, '[ci skip]')"
    runs-on: windows-latest

    name: windows-latest-WSLv1

    env:
      R_REMOTES_NO_ERRORS_FROM_WARNINGS: true
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}
      NOT_CRAN: true

    steps:
      - name: cmdstan env vars
        run: |
          echo "CMDSTAN_PATH=${HOME}/.cmdstan" >> $GITHUB_ENV
        shell: bash

      - uses: n1hility/cancel-previous-runs@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
        if: "!startsWith(github.ref, 'refs/tags/') && github.ref != 'refs/heads/master'"

      - uses: actions/checkout@v4

      - uses: r-lib/actions/setup-r@v2.9.0
      - uses: r-lib/actions/setup-pandoc@v2.9.0

      - uses: r-lib/actions/setup-r-dependencies@v2.9.0
        with:
          extra-packages: any::rcmdcheck, local::.

      - uses: Vampire/setup-wsl@v3
        with:
            distribution: Ubuntu-22.04
            use-cache: 'false'
            set-as-default: 'true'
      - name: Install WSL Dependencies
        run: |
          # Bugfix for current gzip (for unpacking apt packages) under WSLv1:
          # https://github.com/microsoft/WSL/issues/8219#issuecomment-1110508016
          echo -en '\x10' | sudo dd of=/usr/bin/gzip count=1 bs=1 conv=notrunc seek=$((0x189))
          sudo apt-get update
          sudo apt-get install -y build-essential libopenmpi-dev
        shell: wsl-bash {0}

      - name: Install cmdstan
        run: |
          cmdstanr::check_cmdstan_toolchain(fix = TRUE)
          cmdstanr::install_cmdstan(cores = 2, wsl = TRUE, overwrite = TRUE)
        shell: Rscript {0}

      - name: Session info
        run: |
          options(width = 100)
          pkgs <- installed.packages()[, "Package"]
          sessioninfo::session_info(pkgs, include_base = TRUE)
        shell: Rscript {0}

      - uses: r-lib/actions/check-r-package@v2.9.0
        env:
          _R_CHECK_CRAN_INCOMING_: false

      - name: Show testthat output
        if: always()
        run: find check -name 'testthat.Rout*' -exec cat '{}' \; || true
        shell: bash

      - name: Upload check results
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: wsl-backend-results
          path: check
